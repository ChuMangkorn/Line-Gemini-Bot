const moment = require('moment-timezone');

class Helpers {
  // ‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÄ‡∏ß‡∏•‡∏≤‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö timezone ‡∏ï‡πà‡∏≤‡∏á‡πÜ
  static formatTime(timezone = 'Asia/Bangkok') {
    return moment().tz(timezone).format('YYYY-MM-DD HH:mm:ss');
  }

  // ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏°‡∏∑‡∏≠‡∏á‡∏ç‡∏µ‡πà‡∏õ‡∏∏‡πà‡∏ô
  static formatJapanTime() {
    return moment().tz('Asia/Tokyo').format('YYYYÂπ¥MMÊúàDDÊó• HH:mm:ss JST');
  }

  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
  static sanitizeText(text) {
    if (!text || typeof text !== 'string') return '';

    return text
      .replace(/[<>]/g, '') // ‡∏•‡∏ö HTML tags ‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô
      .replace(/\s+/g, ' ') // ‡∏•‡∏ö‡∏ä‡πà‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏Å‡∏¥‡∏ô
      .trim()
      .substring(0, 5000); // ‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß
  }

  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô URL ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
  static isValidUrl(string) {
    try {
      new URL(string);
      return true;
    } catch {
      return false; // ‡∏•‡∏ö _error parameter ‡∏≠‡∏≠‡∏Å‡πÄ‡∏•‡∏¢
    }
  }

  // ‡∏™‡∏£‡πâ‡∏≤‡∏á unique ID ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö session
  static generateSessionId() {
    return Date.now().toString(36) + Math.random().toString(36).substr(2);
  }

  // ‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡∏ô‡∏≤‡∏î‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ó‡∏µ‡πà‡∏≠‡πà‡∏≤‡∏ô‡∏á‡πà‡∏≤‡∏¢
  static formatFileSize(bytes) {
    if (bytes === 0) return '0 Bytes';

    const k = 1024;
    const sizes = ['Bytes', 'KB', 'MB', 'GB'];
    const i = Math.floor(Math.log(bytes) / Math.log(k));

    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
  }

  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡πÑ‡∏ü‡∏•‡πå‡∏à‡∏≤‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå
  static getFileType(fileName) {
    if (!fileName) return 'unknown';

    const extension = fileName.toLowerCase().split('.').pop();

    const fileTypes = {
      // ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
      'jpg': 'image', 'jpeg': 'image', 'png': 'image', 'gif': 'image', 'webp': 'image',
      // ‡πÄ‡∏™‡∏µ‡∏¢‡∏á
      'mp3': 'audio', 'wav': 'audio', 'ogg': 'audio', 'm4a': 'audio', 'aac': 'audio',
      // ‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠
      'mp4': 'video', 'avi': 'video', 'mov': 'video', 'wmv': 'video', 'flv': 'video',
      // ‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£
      'pdf': 'document', 'doc': 'document', 'docx': 'document', 'txt': 'document', 'rtf': 'document',
      // ‡∏≠‡∏∑‡πà‡∏ô‡πÜ
      'zip': 'archive', 'rar': 'archive', '7z': 'archive'
    };

    return fileTypes[extension] || 'unknown';
  }

  // ‡∏™‡∏£‡πâ‡∏≤‡∏á Quick Reply ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡πà‡∏≤‡∏á‡πÜ
  static createQuickReply(options) {
    return {
      type: 'text',
      text: options.text || '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å:',
      quickReply: {
        items: options.items.map(item => ({
          type: 'action',
          action: {
            type: 'message',
            label: item.label,
            text: item.text || item.label
          }
        }))
      }
    };
  }

  // ‡∏™‡∏£‡πâ‡∏≤‡∏á Flex Message ‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô
  static createFlexMessage(title, content) {
    return {
      type: 'flex',
      altText: title,
      contents: {
        type: 'bubble',
        header: {
          type: 'box',
          layout: 'vertical',
          contents: [
            {
              type: 'text',
              text: title,
              weight: 'bold',
              size: 'lg',
              color: '#1DB446'
            }
          ]
        },
        body: {
          type: 'box',
          layout: 'vertical',
          contents: content
        }
      }
    };
  }

  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÅ‡∏•‡∏∞‡∏™‡πà‡∏á‡∏Ñ‡∏∑‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°
  static handleError(error, context = '') {
    console.error(`Error in ${context}:`, error);

    // ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏ó‡∏µ‡πà‡∏û‡∏ö‡∏ö‡πà‡∏≠‡∏¢
    if (error.message.includes('quota')) {
      return '‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö ‡πÄ‡∏•‡πâ‡∏á‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏´‡∏ô‡∏±‡∏Å‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡πÉ‡∏ô‡∏≠‡∏µ‡∏Å‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà';
    }

    if (error.message.includes('network') || error.message.includes('timeout')) {
      return '‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö ‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á';
    }

    if (error.message.includes('file too large')) {
      return '‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö ‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏´‡∏ç‡πà‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏™‡πà‡∏á‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏•‡πá‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 10MB';
    }

    return '‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö ‡πÄ‡∏•‡πâ‡∏á‡∏û‡∏ö‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏• ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á';
  }

  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô (Rate Limiting)
  static checkRateLimit(userId, cache, maxRequests = 10, timeWindow = 60000) {
    const now = Date.now();
    const userRequests = cache.get(`rate_${userId}`) || [];

    // ‡∏•‡∏ö‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡πà‡∏≤‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ
    const validRequests = userRequests.filter(time => now - time < timeWindow);

    if (validRequests.length >= maxRequests) {
      return false; // ‡πÄ‡∏Å‡∏¥‡∏ô‡∏Ç‡∏î
    }

    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≥‡∏Ç‡∏≠‡πÉ‡∏´‡∏°‡πà
    validRequests.push(now);
    cache.set(`rate_${userId}`, validRequests, timeWindow / 1000);

    return true;
  }

  // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
  static generateUsageStats(cache, userId) {
    const stats = cache.get(`stats_${userId}`) || {
      textMessages: 0,
      imageAnalysis: 0,
      audioProcessing: 0,
      videoAnalysis: 0,
      documentReading: 0,
      weatherQueries: 0,
      totalInteractions: 0
    };

    return `üìä ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì:
üí¨ ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°: ${stats.textMessages}
üñºÔ∏è ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û: ${stats.imageAnalysis}
üéµ ‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡πÄ‡∏™‡∏µ‡∏¢‡∏á: ${stats.audioProcessing}
üé¨ ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠: ${stats.videoAnalysis}
üìÑ ‡∏≠‡πà‡∏≤‡∏ô‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£: ${stats.documentReading}
üå§Ô∏è ‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°‡∏™‡∏†‡∏≤‡∏û‡∏≠‡∏≤‡∏Å‡∏≤‡∏®: ${stats.weatherQueries}
üî¢ ‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: ${stats.totalInteractions} ‡∏Ñ‡∏£‡∏±‡πâ‡∏á`;
  }

  // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
  static updateUsageStats(cache, userId, action) {
    const stats = cache.get(`stats_${userId}`) || {
      textMessages: 0,
      imageAnalysis: 0,
      audioProcessing: 0,
      videoAnalysis: 0,
      documentReading: 0,
      weatherQueries: 0,
      totalInteractions: 0
    };

    if (stats[action] !== undefined) {
      stats[action]++;
    }
    stats.totalInteractions++;

    cache.set(`stats_${userId}`, stats, 86400); // ‡πÄ‡∏Å‡πá‡∏ö 24 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á
  }

  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢‡∏Ç‡∏≠‡∏á‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤
  static isSafeContent(text) {
    const unsafePatterns = [
      /\b(password|‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô)\b/i,
      /\b(credit card|‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡∏Å‡∏≤‡∏£‡πå‡∏î)\b/i,
      /\b(ssn|‡πÄ‡∏•‡∏Ç‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß)\b/i,
      /\b(bank account|‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£)\b/i
    ];

    return !unsafePatterns.some(pattern => pattern.test(text));
  }

  // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏´‡∏°‡πà
  static createWelcomeMessage() {
    return {
      type: 'flex',
      altText: '‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏™‡∏π‡πà ‡πÄ‡∏•‡πâ‡∏á AI',
      contents: {
        type: 'bubble',
        header: {
          type: 'box',
          layout: 'vertical',
          contents: [
            {
              type: 'text',
              text: 'ü§ñ ‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡∏ö!',
              weight: 'bold',
              size: 'xl',
              color: '#1DB446'
            },
            {
              type: 'text',
              text: '‡∏ú‡∏° ‡πÄ‡∏•‡πâ‡∏á AI ‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡πÑ‡∏î‡πâ‡∏ó‡∏∏‡∏Å‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÉ‡∏ô LINE',
              size: 'md',
              color: '#666666'
            }
          ]
        },
        body: {
          type: 'box',
          layout: 'vertical',
          contents: [
            {
              type: 'text',
              text: '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Ç‡∏≠‡∏á‡∏ú‡∏°:',
              weight: 'bold',
              margin: 'md'
            },
            {
              type: 'text',
              text: 'üñºÔ∏è ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û\nüéµ ‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡πÄ‡∏™‡∏µ‡∏¢‡∏á\nüé¨ ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠\nüìÑ ‡∏≠‡πà‡∏≤‡∏ô‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£\nüå§Ô∏è ‡∏û‡∏¢‡∏≤‡∏Å‡∏£‡∏ì‡πå‡∏≠‡∏≤‡∏Å‡∏≤‡∏®\nüí¨ ‡∏™‡∏ô‡∏ó‡∏ô‡∏≤‡∏ò‡∏£‡∏£‡∏°‡∏î‡∏≤\nüåç ‡πÅ‡∏õ‡∏•‡∏†‡∏≤‡∏©‡∏≤\n‡πÅ‡∏•‡∏∞‡∏≠‡∏∑‡πà‡∏ô‡πÜ ‡∏≠‡∏µ‡∏Å‡∏°‡∏≤‡∏Å‡∏°‡∏≤‡∏¢!',
              wrap: true,
              margin: 'sm'
            }
          ]
        },
        footer: {
          type: 'box',
          layout: 'vertical',
          contents: [
            {
              type: 'button',
              action: {
                type: 'message',
                label: '‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô',
                text: '‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ ‡πÄ‡∏•‡πâ‡∏á'
              },
              style: 'primary'
            }
          ]
        }
      }
    };
  }
}

module.exports = Helpers;
